FORMAT: 1A
HOST: http://kandra.stackstorm.com

# Kandra
This is a system that provides a way to describe the action (or sequence of actions) to be performed when a monitoring system(Nagios, Zabbix, Ganglia, Cacti etc.) or an external system sends out an event. This system can be thought of a giant dictionary which maintains a mapping between triggers received from a monitoring system and the action to be performed. The core functionality of this system is to invoke actions on emergence of such triggers.

# Group Rules
Rules related resources of the **Kandra API**

## Rules Collection [/rules{?expand}]

+ Parameters
    + expand = `true` (optional, boolean) ... Expand action and trigger type definitions. In original, shrinked state they should be represented as strings like "git:posthook" (`service name`:`trigger\action name`)

### List all Rules [GET]
+ Response 200 (application/json)

        [{
            "id": 1,
            "enable": true,
            "trigger": {
                "type": {
                    "name": "git:posthook",
                    "service": "Git",
                    "title": "Post-receive hook",
                    "slug": "commit is merged",
                    "form": [{
                        "key": "author",
                        "type": "text",
                        "label": "Author",
                        "desc": "Name or email of the commit author"
                    }, {
                        "key": "repo",
                        "type": "text",
                        "label": "Repository",
                        "desc": "Name of the repository"
                    }, {
                        "key": "branch",
                        "type": "text",
                        "label": "Branch",
                        "desc": "Name of the branch commits would land into"
                    }, {
                        "key": "title",
                        "type": "text",
                        "label": "Title",
                        "desc": "First line of commit message"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Commit message starting with second line"
                    }]
                },
                "options": {
                    "repo": "stackstorm/kandra"
                }
            },
            "action": {
                "type": {
                    "name": "hubot:say",
                    "service": "Hubot",
                    "title": "Say in channel",
                    "slug": "say",
                    "form": [{
                        "key": "channel",
                        "type": "text",
                        "label": "Channel",
                        "desc": "Name of the channel to say to"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "channel": "stackstorm",
                    "message": "New commit has been pushed in {{ repo }} by {{ author }}"
                }
            },
            "created": "2014-05-05T03:31:21.683Z",
            "edited": "2014-05-05T03:42:28.168Z",
            "triggered": "2014-05-05T03:52:59.346Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 16
        }, {
            "id": 2,
            "enable": true,
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": {
                    "name": "jira:createTicket",
                    "service": "Jira",
                    "title": "Create new ticket",
                    "slug": "create a ticket",
                    "form": [{
                        "key": "project",
                        "type": "text",
                        "label": "Project",
                        "desc": "Name or id of the project"
                    }, {
                        "key": "summary",
                        "type": "text",
                        "label": "Summary",
                        "desc": "Short description of the ticket"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Full description of the ticket"
                    }, {
                        "key": "type",
                        "type": "select",
                        "label": "Type",
                        "options": ["bug", "story", "feature"]
                    }]
                },
                "options": {
                    "project": "stackstorm",
                    "type": "story",
                    "summary": "Email: {{ subject }}",
                    "description": "{{ from }} wrote: \n{{ body }}",
                    "reporter": "{{ from }}"
                }
            },
            "created": "2014-05-05T04:03:53.751Z",
            "edited": "2014-05-05T04:03:53.751Z",
            "triggered": "2014-05-05T04:04:38.570Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 1
        }, { 
            "id": 3,
            "enable": false,
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": {
                    "name": "hubot:say",
                    "service": "Hubot",
                    "title": "Say in channel",
                    "slug": "say",
                    "form": [{
                        "key": "channel",
                        "type": "text",
                        "label": "Channel",
                        "desc": "Name of the channel to say to"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "channel": "stackstorm",
                    "message": "New user story has been received from {{ from }}"
                }
            },
            "created": "2014-05-05T04:09:47.427Z",
            "edited": "2014-05-05T04:09:47.427Z",
            "triggered": "2014-05-05T04:09:47.427Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 0
        }]

### Create a Rule [POST]
+ Request (application/json)

        { 
            "trigger": {
                "type": "email:message",
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": "hubot:say",
                "options": {
                    "channel": "stackstorm",
                    "message": "New user story has been received from {{ from }}"
                }
            }
        }

+ Response 201 (application/json)

        { 
            "id": 3,
            "dry": true,
            "enable": true,
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": {
                    "name": "hubot:say",
                    "service": "Hubot",
                    "title": "Say in channel",
                    "slug": "say",
                    "form": [{
                        "key": "channel",
                        "type": "text",
                        "label": "Channel",
                        "desc": "Name of the channel to say to"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "channel": "stackstorm",
                    "message": "New user story has been received from {{ from }}"
                }
            },
            "created": "2014-05-05T04:09:47.427Z",
            "edited": "2014-05-05T04:09:47.427Z",
            "triggered": "2014-05-05T04:09:47.427Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 0
        }

## Rule [/rules/{id}{?expand}]
A single Rule object with all its details

+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Rule to perform action with.
    + expand = `true` (optional, boolean) ... Expand action and trigger type definitions. In original, shrinked state they should be represented as strings like "git:posthook" (`service name`:`trigger\action name`)

### Retrieve a Rule [GET]
+ Response 200 (application/json)

        {
            "id": 2,
            "enable": false,
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": {
                    "name": "jira:createTicket",
                    "service": "Jira",
                    "title": "Create new ticket",
                    "slug": "create a ticket",
                    "form": [{
                        "key": "project",
                        "type": "text",
                        "label": "Project",
                        "desc": "Name or id of the project"
                    }, {
                        "key": "summary",
                        "type": "text",
                        "label": "Summary",
                        "desc": "Short description of the ticket"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Full description of the ticket"
                    }, {
                        "key": "type",
                        "type": "select",
                        "label": "Type",
                        "options": ["bug", "story", "feature"]
                    }]
                },
                "options": {
                    "project": "stackstorm",
                    "type": "story",
                    "summary": "Email: {{ subject }}",
                    "description": "{{ from }} wrote: \n{{ body }}",
                    "reporter": "{{ from }}"
                }
            },
            "created": "2014-05-05T04:03:53.751Z",
            "edited": "2014-05-05T04:03:53.751Z",
            "triggered": "2014-05-05T04:04:38.570Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 1
        }

### Remove a Note [DELETE]
+ Response 204

## Enable [/rules/{id}/enable]
Enable the rule

+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Rule

### Enable the rule [PUT]
+ Response 204

## Disable [/rules/{id}/disable]
Enable the rule

+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Rule

### Disable the rule [PUT]
+ Response 204

## Confirm [/rules/{id}/confirm{?expand}]
Promote dry-run rule to permanent one

+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Rule
    + expand = `true` (optional, boolean) ... Expand action and trigger type definitions. In original, shrinked state they should be represented as strings like "git:posthook" (`service name`:`trigger\action name`)

### Confirm the rule [GET]
+ Response 200 (application/json)

        {
            "id": 2,
            "enable": false,
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                }
            },
            "action": {
                "type": {
                    "name": "jira:createTicket",
                    "service": "Jira",
                    "title": "Create new ticket",
                    "slug": "create a ticket",
                    "form": [{
                        "key": "project",
                        "type": "text",
                        "label": "Project",
                        "desc": "Name or id of the project"
                    }, {
                        "key": "summary",
                        "type": "text",
                        "label": "Summary",
                        "desc": "Short description of the ticket"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Full description of the ticket"
                    }, {
                        "key": "type",
                        "type": "select",
                        "label": "Type",
                        "options": ["bug", "story", "feature"]
                    }]
                },
                "options": {
                    "project": "stackstorm",
                    "type": "story",
                    "summary": "Email: {{ subject }}",
                    "description": "{{ from }} wrote: \n{{ body }}",
                    "reporter": "{{ from }}"
                }
            },
            "created": "2014-05-05T04:03:53.751Z",
            "edited": "2014-05-05T04:03:53.751Z",
            "triggered": "2014-05-05T04:04:38.570Z",
            "checked": "2014-05-05T05:05:54.747Z",
            "count": 1
        }

## Auditing the rule [/rules/{id}/log{?expand}]
Rule log

+ Parameters
    + id (required, number, `3`) ... Numeric `id` of the Rule
    + expand = `true` (optional, boolean) ... Expand action and trigger type definitions. In original, shrinked state they should be represented as strings like "git:posthook" (`service name`:`trigger\action name`)

### List all entries [GET]
+ Response 200 (application/json)

        [{
            "trigger": {
                "type": {
                    "name": "email:message",
                    "service": "Email",
                    "title": "Receive a message",
                    "slug": "received a message",
                    "form": [{
                        "key": "from",
                        "type": "text",
                        "label": "From",
                        "desc": "Senders email address"
                    }, {
                        "key": "to",
                        "type": "text",
                        "label": "To",
                        "desc": "Recipient email address"
                    }, {
                        "key": "subj",
                        "type": "text",
                        "label": "Subject",
                        "desc": "Subject line of the mail"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "to": "support@stackstorm.com"
                },
                "response": {
                    "err": null,
                    "from": "stan@stackstorm.com",
                    "to": "support@stackstorm.com",
                    "subj": "Test",
                    "message": "Dry-run message. Disregard.",
                    "timestamp": "2014-09-11T16:41:11.922Z"
                },
                "timestamp": "2014-09-11T16:41:12.014Z"
            },
            "action": {
                "type": {
                    "name": "hubot:say",
                    "service": "Hubot",
                    "title": "Say in channel",
                    "slug": "say",
                    "form": [{
                        "key": "channel",
                        "type": "text",
                        "label": "Channel",
                        "desc": "Name of the channel to say to"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }]
                },
                "options": {
                    "channel": "stackstorm",
                    "message": "New user story has been received from {{ from }}"
                },
                "response": {
                    "err": null,
                    "channel": "stackstorm",
                    "message": "New user story has been received from stan@stackstorm.com",
                    "timestamp": "2014-09-11T16:41:12.470Z",
                    "userList": ["dzimine", "mar", "evan", "manas"]
                }
            }
        }]

# Group Categories
A combination of triggers and stactions provided by particular service (git, nagios, etc.)

## Categories collection [/categories]
### List all Categories [GET]
+ Response 200 (application/json)

        {
            "git": {
                "name": "git",
                "title": "Git", 
                "triggers": {
                    "prehook": {
                        "name": "git:prehook",
                        "service": "Git",
                        "title": "Pre-receive hook",
                        "slug": "commit is scheduled for merge",
                        "form": [{
                            "key": "author",
                            "type": "text",
                            "label": "Author",
                            "desc": "Name or email of the commit author"
                        }, {
                            "key": "repo",
                            "type": "text",
                            "label": "Repository",
                            "desc": "Name of the repository"
                        }, {
                            "key": "branch",
                            "type": "text",
                            "label": "Branch",
                            "desc": "Name of the branch commits would land into"
                        }, {
                            "key": "title",
                            "type": "text",
                            "label": "Title",
                            "desc": "First line of commit message"
                        }, {
                            "key": "desc",
                            "type": "textarea",
                            "label": "Description",
                            "desc": "Commit message starting with second line"
                        }]
                    },
                    "posthook": {
                        "name": "git:posthook",
                        "service": "Git",
                        "title": "Post-receive hook",
                        "slug": "commit is merged",
                        "form": [{
                            "key": "author",
                            "type": "text",
                            "label": "Author",
                            "desc": "Name or email of the commit author"
                        }, {
                            "key": "repo",
                            "type": "text",
                            "label": "Repository",
                            "desc": "Name of the repository"
                        }, {
                            "key": "branch",
                            "type": "text",
                            "label": "Branch",
                            "desc": "Name of the branch commits would land into"
                        }, {
                            "key": "title",
                            "type": "text",
                            "label": "Title",
                            "desc": "First line of commit message"
                        }, {
                            "key": "desc",
                            "type": "textarea",
                            "label": "Description",
                            "desc": "Commit message starting with second line"
                        }]
                    }
                },
                "actions": {
                    "createTag": {
                        "name": "git:createTag",
                        "service": "Git",
                        "title": "Create new tag",
                        "slug": "create new tag",
                        "form": [{
                            "key": "tag",
                            "type": "text",
                            "label": "Tag name",
                            "desc": "Name of the tag"
                        }, {
                            "key": "message",
                            "type": "textarea",
                            "label": "Message"
                        }, {
                            "key": "object",
                            "type": "text",
                            "label": "SHA object",
                            "desc": "Identificator of the object to create tag to (ex. commit SHA)"
                        }, {
                            "key": "type",
                            "type": "select",
                            "label": "Type",
                            "desc": "Type of the object",
                            "options": [{
                                "key": "commit",
                                "value": "Commit"
                            }, {
                                "key": "tree",
                                "value": "Tree"
                            }, {
                                "key": "blob",
                                "value": "Blob"
                            }]
                        }]
                    }
                }
            },
            "hubot": {
                "name": "hubot",
                "title": "Chat",
                "triggers": {
                    "command": {
                        "name": "hubot:command",
                        "service": "Hubot",
                        "title": "Receive a command",
                        "slug": "recived a command",
                        "form": [{
                            "key": "user",
                            "type": "text",
                            "label": "User",
                            "desc": "Name of the user"
                        }, {
                            "key": "channel",
                            "type": "text",
                            "label": "Channel",
                            "desc": "Name of the channel to listen for command"
                        }, {
                            "key": "command",
                            "type": "text",
                            "label": "Command",
                            "desc": "The command to trigger to. Exclamation mark is not necessary."
                        }, {
                            "key": "args",
                            "type": "text",
                            "label": "Argument string",
                            "desc": "the rest of the message after the command"
                        }]
                    }
                },
                "actions": {
                    "say": {
                        "name": "hubot:say",
                        "service": "Hubot",
                        "title": "Say in channel",
                        "slug": "say",
                        "form": [{
                            "key": "channel",
                            "type": "text",
                            "label": "Channel",
                            "desc": "Name of the channel to say to"
                        }, {
                            "key": "message",
                            "type": "textarea",
                            "label": "Message"
                        }]
                    }
                }
            },
            "email": {
                "name": "email",
                "title": "Email",
                "triggers": {
                    "message": {
                        "name": "email:message",
                        "service": "Email",
                        "title": "Receive a message",
                        "slug": "received a message",
                        "form": [{
                            "key": "from",
                            "type": "text",
                            "label": "From",
                            "desc": "Senders email address"
                        }, {
                            "key": "to",
                            "type": "text",
                            "label": "To",
                            "desc": "Recipient email address"
                        }, {
                            "key": "subj",
                            "type": "text",
                            "label": "Subject",
                            "desc": "Subject line of the mail"
                        }, {
                            "key": "message",
                            "type": "textarea",
                            "label": "Message"
                        }]
                    }
                },
                "actions": {
                    "message": {
                        "name": "email:message",
                        "service": "Email",
                        "title": "Send a message",
                        "slug": "send a message",
                        "form": [{
                            "key": "from",
                            "type": "select",
                            "label": "From",
                            "desc": "Address to send from",
                            "options": [
                                "support@stackstorm.com",
                                "info@stackstorm.com",
                                "finance@stackstorm.com",
                                {
                                    "key": "Same it was received to",
                                    "value": "{{ to }}"
                                }
                            ]
                        }, {
                            "key": "to",
                            "type": "text",
                            "label": "To",
                            "desc": "Recipient email address"
                        }, {
                            "key": "subj",
                            "type": "text",
                            "label": "Subject",
                            "desc": "Subject line of the mail"
                        }, {
                            "key": "message",
                            "type": "textarea",
                            "label": "Message"
                        }]
                    }
                }
            },
            "jira": {
                "name": "jira",
                "title": "Jira",
                "triggers": {
                    "newTicket": {
                        "name": "jira:newTicket",
                        "service": "Jira",
                        "title": "New ticket",
                        "slug": "ticket has been created",
                        "form": [{
                            "key": "project",
                            "type": "text",
                            "label": "Project",
                            "desc": "Name or id of the project"
                        }, {
                            "key": "summary",
                            "type": "text",
                            "label": "Summary",
                            "desc": "Short description of the ticket"
                        }, {
                            "key": "desc",
                            "type": "textarea",
                            "label": "Description",
                            "desc": "Full description of the ticket"
                        }, {
                            "key": "type",
                            "type": "select",
                            "label": "Type",
                            "options": ["bug", "story", "feature"]
                        }]
                    }
                },
                "actions": {
                    "createTicket": {
                        "name": "jira:createTicket",
                        "service": "Jira",
                        "title": "Create new ticket",
                        "slug": "create a ticket",
                        "form": [{
                            "key": "project",
                            "type": "text",
                            "label": "Project",
                            "desc": "Name or id of the project"
                        }, {
                            "key": "summary",
                            "type": "text",
                            "label": "Summary",
                            "desc": "Short description of the ticket"
                        }, {
                            "key": "desc",
                            "type": "textarea",
                            "label": "Description",
                            "desc": "Full description of the ticket"
                        }, {
                            "key": "type",
                            "type": "select",
                            "label": "Type",
                            "options": ["bug", "story", "feature"]
                        }]
                    }
                }
            }
        }

## Category [/categories/{name}]

+ Parameters
    + name (required, string, `git`) ... `Name` of the Category to get
    
### Retrieve a Category [GET]
+ Response 200 (application/json)
    
        {
            "name": "git",
            "title": "Git", 
            "triggers": {
                "prehook": {
                    "name": "git:prehook",
                    "service": "Git",
                    "title": "Pre-receive hook",
                    "slug": "commit is scheduled for merge",
                    "form": [{
                        "key": "author",
                        "type": "text",
                        "label": "Author",
                        "desc": "Name or email of the commit author"
                    }, {
                        "key": "repo",
                        "type": "text",
                        "label": "Repository",
                        "desc": "Name of the repository"
                    }, {
                        "key": "branch",
                        "type": "text",
                        "label": "Branch",
                        "desc": "Name of the branch commits would land into"
                    }, {
                        "key": "title",
                        "type": "text",
                        "label": "Title",
                        "desc": "First line of commit message"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Commit message starting with second line"
                    }]
                },
                "posthook": {
                    "name": "git:posthook",
                    "service": "Git",
                    "title": "Post-receive hook",
                    "slug": "commit is merged",
                    "form": [{
                        "key": "author",
                        "type": "text",
                        "label": "Author",
                        "desc": "Name or email of the commit author"
                    }, {
                        "key": "repo",
                        "type": "text",
                        "label": "Repository",
                        "desc": "Name of the repository"
                    }, {
                        "key": "branch",
                        "type": "text",
                        "label": "Branch",
                        "desc": "Name of the branch commits would land into"
                    }, {
                        "key": "title",
                        "type": "text",
                        "label": "Title",
                        "desc": "First line of commit message"
                    }, {
                        "key": "desc",
                        "type": "textarea",
                        "label": "Description",
                        "desc": "Commit message starting with second line"
                    }]
                }
            },
            "actions": {
                "createTag": {
                    "name": "git:createTag",
                    "service": "Git",
                    "title": "Create new tag",
                    "slug": "create new tag",
                    "form": [{
                        "key": "tag",
                        "type": "text",
                        "label": "Tag name",
                        "desc": "Name of the tag"
                    }, {
                        "key": "message",
                        "type": "textarea",
                        "label": "Message"
                    }, {
                        "key": "object",
                        "type": "text",
                        "label": "SHA object",
                        "desc": "Identificator of the object to create tag to (ex. commit SHA)"
                    }, {
                        "key": "type",
                        "type": "select",
                        "label": "Type",
                        "desc": "Type of the object",
                        "options": [{
                            "key": "commit",
                            "value": "Commit"
                        }, {
                            "key": "tree",
                            "value": "Tree"
                        }, {
                            "key": "blob",
                            "value": "Blob"
                        }]
                    }]
                }
            }

## Triggers collection [/categories/{name}/triggers]

+ Parameters
    + name (required, string, `git`) ... `Name` of the Category
    
### List all Triggers of the Service [GET]
+ Response 200 (application/json)
    
        {
            "prehook": {
                "name": "git:prehook",
                "service": "Git",
                "title": "Pre-receive hook",
                "slug": "commit is scheduled for merge",
                "form": [{
                    "key": "author",
                    "type": "text",
                    "label": "Author",
                    "desc": "Name or email of the commit author"
                }, {
                    "key": "repo",
                    "type": "text",
                    "label": "Repository",
                    "desc": "Name of the repository"
                }, {
                    "key": "branch",
                    "type": "text",
                    "label": "Branch",
                    "desc": "Name of the branch commits would land into"
                }, {
                    "key": "title",
                    "type": "text",
                    "label": "Title",
                    "desc": "First line of commit message"
                }, {
                    "key": "desc",
                    "type": "textarea",
                    "label": "Description",
                    "desc": "Commit message starting with second line"
                }]
            },
            "posthook": {
                "name": "git:posthook",
                "service": "Git",
                "title": "Post-receive hook",
                "slug": "commit is merged",
                "form": [{
                    "key": "author",
                    "type": "text",
                    "label": "Author",
                    "desc": "Name or email of the commit author"
                }, {
                    "key": "repo",
                    "type": "text",
                    "label": "Repository",
                    "desc": "Name of the repository"
                }, {
                    "key": "branch",
                    "type": "text",
                    "label": "Branch",
                    "desc": "Name of the branch commits would land into"
                }, {
                    "key": "title",
                    "type": "text",
                    "label": "Title",
                    "desc": "First line of commit message"
                }, {
                    "key": "desc",
                    "type": "textarea",
                    "label": "Description",
                    "desc": "Commit message starting with second line"
                }]
            }
        }

## Trigger [/categories/{name}/triggers/{trigger}]

+ Parameters
    + name (required, string, `git`) ... Name of the Category
    + trigger (required, string, `posthook`) ... Name of the Trigger
    
### Retrieve a Service [GET]
+ Response 200 (application/json)
    
        {
            "name": "git:posthook",
            "service": "Git",
            "title": "Post-receive hook",
            "slug": "commit is merged",
            "form": [{
                "key": "author",
                "type": "text",
                "label": "Author",
                "desc": "Name or email of the commit author"
            }, {
                "key": "repo",
                "type": "text",
                "label": "Repository",
                "desc": "Name of the repository"
            }, {
                "key": "branch",
                "type": "text",
                "label": "Branch",
                "desc": "Name of the branch commits would land into"
            }, {
                "key": "title",
                "type": "text",
                "label": "Title",
                "desc": "First line of commit message"
            }, {
                "key": "desc",
                "type": "textarea",
                "label": "Description",
                "desc": "Commit message starting with second line"
            }]
        }

## Actions collection [/categories/{name}/actions]

+ Parameters
    + name (required, string, `git`) ... `Name` of the Category
    
### List all Triggers of the Service [GET]
+ Response 200 (application/json)
    
        {
            "createTag": {
                "name": "git:createTag",
                "service": "Git",
                "title": "Create new tag",
                "slug": "create new tag",
                "form": [{
                    "key": "tag",
                    "type": "text",
                    "label": "Tag name",
                    "desc": "Name of the tag"
                }, {
                    "key": "message",
                    "type": "textarea",
                    "label": "Message"
                }, {
                    "key": "object",
                    "type": "text",
                    "label": "SHA object",
                    "desc": "Identificator of the object to create tag to (ex. commit SHA)"
                }, {
                    "key": "type",
                    "type": "select",
                    "label": "Type",
                    "desc": "Type of the object",
                    "options": [{
                        "key": "commit",
                        "value": "Commit"
                    }, {
                        "key": "tree",
                        "value": "Tree"
                    }, {
                        "key": "blob",
                        "value": "Blob"
                    }]
                }]
            }
        }

## Action [/categories/{name}/actions/{action}]

+ Parameters
    + name (required, string, `git`) ... Name of the Category
    + action (required, string, `createTag`) ... Name of the Action
    
### Retrieve a Service [GET]
+ Response 200 (application/json)
    
        {
            "name": "git:createTag",
            "service": "Git",
            "title": "Create new tag",
            "slug": "create new tag",
            "form": [{
                "key": "tag",
                "type": "text",
                "label": "Tag name",
                "desc": "Name of the tag"
            }, {
                "key": "message",
                "type": "textarea",
                "label": "Message"
            }, {
                "key": "object",
                "type": "text",
                "label": "SHA object",
                "desc": "Identificator of the object to create tag to (ex. commit SHA)"
            }, {
                "key": "type",
                "type": "select",
                "label": "Type",
                "desc": "Type of the object",
                "options": [{
                    "key": "commit",
                    "value": "Commit"
                }, {
                    "key": "tree",
                    "value": "Tree"
                }, {
                    "key": "blob",
                    "value": "Blob"
                }]
            }]
        }

