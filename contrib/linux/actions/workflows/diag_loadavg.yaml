---
  chain:
    -
      name: "check_load"
      ref: "linux.check_loadavg"
      parameters:
        hosts: "{{hostname}}"
        period: "all"
      on-success: "d_state_processes"
    -
      name: "d_state_processes"
      ref: "linux.check_processes"
      parameters:
        hosts: "{{hostname}}"
        search: "state"
        criteria: "D"
        args: "pidlist"
      on-success: "r_state_processes"
    -
      name: "r_state_processes"
      ref: "linux.check_processes"
      parameters:
        hosts: "{{hostname}}"
        search: "state"
        criteria: "R"
        args: "pidlist"
      on-success: "netstat"
    -
      name: "netstat"
      ref: "linux.netstat_grep"
      parameters:
        hosts: "{{hostname}}"
        pids: "{{d_state_processes[hostname].stderr}} {{r_state_processes[hostname].stderr}}"
      on-success: "lsof"
    -
      name: "lsof"
      ref: "linux.lsof_pids"
      parameters:
        hosts: "{{hostname}}"
        pids: "{{d_state_processes[hostname].stderr}} {{r_state_processes[hostname].stderr}}"
      on-success: "dump_results"
    -
      name: "dump_results"
      ref: "core.local"
      parameters:
        cmd: >
          echo "{{__results}}"
          | python3 -c
          'import ast, datetime, json, sys;
          diag_data=ast.literal_eval(sys.stdin.read());
          diag_data["timestamp"] = str(datetime.datetime.now());
          print(json.dumps(diag_data))'
          >> /tmp/diag_loadavg.json
          && echo 'Output written to file /tmp/diag_loadavg.json'
  default: "check_load"
