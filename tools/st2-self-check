#!/bin/bash

## Script to install samples, tests, and run all workflows in tests pack.
ERRORS=0
PACKS="tests examples"

if [ -z $ST2_AUTH_TOKEN ]; then
  echo "Please set ST2_AUTH_TOKEN and re-run"
  exit 1
fi

#Determine Distro
DEBTEST=`lsb_release -a 2> /dev/null | grep Distributor | awk '{print $3}'`

if [[ "$DEBTEST" == "Ubuntu" ]]; then
  TYPE="debs"
  PYTHONPACK="/usr/lib/python2.7/dist-packages"
elif [[ -f "/etc/redhat-release" ]]; then
  TYPE="rpms"
  PYTHONPACK="/usr/lib/python2.7/site-packages"
else
  echo "Unknown Operating System"
  exit 2
fi

# Install test prerequisites
${PYTHONPACK}/st2common/bin/st2-setup-tests asserts
${PYTHONPACK}/st2common/bin/st2-setup-tests fixtures

# Install required packs if necessary
for PACK in $PACKS; do
  CHECK=`st2 action list --pack=${PACK} | grep ${PACK}`
  if [ $? -ne 0 ]; then
    if [ "$PACK" == "tests" ]; then
      ARG="tests"
    else
      ARG="" 
    fi
    INSTALL=`${PYTHONPACK}/st2common/bin/st2-setup-${PACK} ${ARG}`

    EXITCODE=$?
    echo $INSTALL
    if [ ${EXITCODE} -ne 0 ]; then
      echo "st2-self-check failed.  See above."
      exit 2
    fi
  fi
done

# Retrieve test action list
TEST_ACTION_LIST=`st2 action list --pack=tests -w 90 | awk '{ print $2 }' | grep -v "|" | grep -v "ref"`

# Run all the tests
for TEST in $TEST_ACTION_LIST
    do
        echo -n "Attempting Test ${TEST}..."
        TEST_OUTPUT=`st2 run ${TEST} token=${ST2_AUTH_TOKEN} -j`
        CHECK_STATUS=`echo ${TEST_OUTPUT} | grep '"status": "succeeded"'`
        if [ $? -ne 0 ]; then
            echo -e "ERROR!"
            ((ERRORS++))
        else
            echo "OK!"
        fi
    done

echo -n "Attempting Example examples.mistral_examples..."
MISTRAL_EXAMPLES=`st2 run examples.mistral_examples -j`
CHECK_STATUS=`echo ${MISTRAL_EXAMPLES} | grep '"status": "succeeded"'`
if [ $? -ne 0 ]; then
    ((ERRORS++))
fi

if [ $ERRORS -ne 0 ]; then
    echo "ERROR!"
    echo "st2-self-check failed.  See above.  Also check the execution list for details."
    echo "st2 execution list"
else
    echo -e "OK!"

cat << EOF

############################################################# 
###################################################   ####### 
###############################################   /~\   #####
############################################   _- \`~~~', ####
##########################################  _-~       )  ####
#######################################  _-~          |  ####
####################################  _-~            ;  #####
##########################  __---___-~              |   #####
#######################   _~   ,,                  ;  \`,,  ##
#####################  _-~    ;'                  |  ,'  ; ##
###################  _~      '                    \`~'   ; ###
############   __---;                                 ,' ####
########   __~~  ___                                ,' ######
#####  _-~~   -~~ _                               ,' ########
##### \`-_         _                              ; ##########
#######  ~~----~~~   ;                          ; ###########
#########  /          ;                        ; ############
#######  /             ;                      ; #############
#####  /                \`                    ; ##############
###  /                                      ; ###############
#                                            ################

EOF

fi
