# Used old infrastructure, needed for integration tests:
# http://docs.travis-ci.com/user/workers/standard-infrastructure/
sudo: required
dist: precise
language: python

branches:
  only:
    - master
    - /^v[0-9]+\.[0-9]+$/

env:
  global:
    - CACHE_NAME=JOB1
    # NOTE: We only enable coverage for master builds and not pull requests
    # since it has huge performance overhead (etests are 50% or so slower)
    - ENABLE_COVERAGE=$([ "${TRAVIS_PULL_REQUEST}" = "false" ] && echo "yes" || echo "no")
    # We need to explicitly specify terminal width otherwise some CLI tests fail on container
    # environments where small terminal size is used.
    - COLUMNS=120
    - PYLINT_CONCURRENCY=2
    # We only run tests with "--with-timer" flag on master and not for PRs since it adds 1-2
    # # minutes of overhead to each build.
    - NOSE_TIME=$([ "${TRAVIS_PULL_REQUEST}" = "false" ] && echo "yes" || echo "no")
matrix:
  include:
    # NOTE: We combine builds because Travis offers a maximum of 5 concurrent
    # builds and having 6 tasks / builds means 1 tasks will need to wait for one
    # of the other 5 tasks to finish before it can start
    #- env: TASK=ci-unit NODE_INDEX=0 NODE_TOTAL=2
    #  python: 2.7
    #  name: "Unit Tests (Python 2.7) - 1"
    #- env: TASK=ci-unit NODE_INDEX=1 NODE_TOTAL=2
    #  python: 2.7
    #  name: "Unit Tests (Python 2.7) - 2"
    - env: TASK=ci-unit
      python: 2.7
      name: "Unit Tests (Python 2.7)"
    - env: TASK=ci-integration
      python: 2.7
      name: "Integration Tests (Python 2.7)"
    - env: TASK="ci-checks ci-packs-tests"
      python: 2.7
      name: "Lint Checks, Packs Tests (Python 2.7)"
    - env: TASK="compilepy3 ci-py3-unit" CACHE_NAME=py3
      python: 3.6
      name: "Unit Tests (Python 3.6)"
    - env: TASK="ci-py3-integration" CACHE_NAME=py3
      python: 3.6
      name: "Integration Tests (Python 3.6)"
addons:
  apt:
    sources:
      - mongodb-upstart
      - sourceline: 'deb [arch=amd64] http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.4 multiverse'
        key_url: 'https://www.mongodb.org/static/pgp/server-3.4.asc'
      - sourceline: 'ppa:git-core/ppa'
    packages:
      - mongodb-org-server
      - mongodb-org-shell
      - git

services:
  - mongodb
  - rabbitmq

cache:
  pip: true
  directories:
    # NOTE: If using a custom "install" step aka overriding "install" step, "cache.pip: true" doesn't work
    # and directory needs to be explicitly added to the cache.
    # See https://github.com/travis-ci/travis-ci/issues/3239, https://github.com/oppia/oppia/pull/5281 for details.
    - $HOME/.cache/pip
    - virtualenv/
    # NOTE: Caching .tox speeds up py3 build for 30-60 seconds, but causes issues when dependencies
    # are updated so it's disabled
    #- .tox/

before_install:
  # Work around for Travis timeout issues, see https://github.com/travis-ci/travis-ci/issues/9112
  - sudo apt-get update --option Acquire::Retries=100 --option Acquire::http::Timeout="60"
  - pip install --upgrade "pip>=9.0,<9.1"
  - sudo pip install --upgrade "virtualenv==15.1.0"

install:
  - if [ "${TASK}" = 'compilepy3 ci-py3-unit' ] || [ "${TASK}" = 'ci-py3-integration' ]; then pip install "tox==3.0.0"; else make requirements; fi
  - if [ "${TASK}" = 'ci-unit' ] || [ "${TASK}" = 'ci-integration' ] || [ "${TASK}" = 'compilepy3 ci-py3-unit' ] || [ "${TASK}" = 'ci-py3-integration' ]; then sudo .circle/add-itest-user.sh; fi

# Let's enable rabbitmqadmin
# See https://github.com/messagebus/lapine/wiki/Testing-on-Travis.
before_script:
  # Use a custom mongod.conf which uses various speed optimizations
  - sudo cp scripts/travis/mongod.conf /etc/mongod.conf
  - sudo service mongod restart ; sleep 5
  - git --version
  - pip --version
  - virtualenv --version
  - sudo rabbitmq-plugins enable rabbitmq_management
  - sudo wget http://guest:guest@localhost:15672/cli/rabbitmqadmin -O /usr/local/bin/rabbitmqadmin
  - sudo chmod +x /usr/local/bin/rabbitmqadmin
  - sudo service rabbitmq-server restart
  # Print out various environment variables info
  - make play

script:
  - make ${TASK}
  # NOTE: We only generate and submit coverage report for master and version branches
  # NOTE: We put this here and not after_success so build is marked as failed if this step fails
  # See https://docs.travis-ci.com/user/customizing-the-build/#breaking-the-build
  # https://github.com/travis-ci/travis-ci/issues/758#issuecomment-266756853
  - if [ ${TASK} = 'ci-unit' ] || [ ${TASK} = 'ci-integration' ] && [ "${ENABLE_COVERAGE}" = 'yes' ]; then ./scripts/travis/submit-codecov-coverage.sh; fi

# Don't store cache for target PR branch (typically `master`), because it will be re-used for opened PRs
# See: https://docs.travis-ci.com/user/caching/#Pull-request-builds-and-caches
# Alternative: use strict pip pinning, including git-based pip packages
before_cache:
  - if [ ${TRAVIS_PULL_REQUEST} = 'false' ]; then rm -rf virtualenv/; fi
