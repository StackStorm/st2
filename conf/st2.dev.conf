# Config used by local development environment (tools/launch.dev.sh)
[database]
host = 127.0.0.1

[api]
# Host and port to bind the API server.
host = 127.0.0.1
port = 9101
logging = st2api/conf/logging.conf
mask_secrets = True
# allow_origin is required for handling CORS in st2 web UI.
# allow_origin = http://myhost1.example.com:3000,http://myhost2.example.com:3000
# Development vagrant VM is setup to run on 172.168.50.50.
allow_origin = *

[keyvalue]
encryption_key_path = conf/st2_kvstore_demo.crypto.key.json

[stream]
# Host and port to bind the API server.
host = 127.0.0.1
port = 9102
logging = st2stream/conf/logging.conf
# allow_origin is required for handling CORS in st2 web UI.
# allow_origin = http://myhost1.example.com:3000,http://myhost2.example.com:3000
# Development vagrant VM is setup to run on 172.168.50.50.
allow_origin = http://172.168.50.50:3000

[sensorcontainer]
logging = st2reactor/conf/logging.sensorcontainer.conf
sensor_node_name = sensornode1
partition_provider = name:default

[rulesengine]
logging = st2reactor/conf/logging.rulesengine.conf

[timersengine]
logging = st2reactor/conf/logging.timersengine.conf

[actionrunner]
logging = st2actions/conf/logging.conf
stream_output = True

[rbac]
enable = False

[auth]
host = 127.0.0.1
port = 9100
use_ssl = False
debug = False
enable = False
logging = st2auth/conf/logging.conf

mode = standalone
backend = flat_file
backend_kwargs = {"file_path": "st2auth/conf/htpasswd_dev"}

# Base URL to the API endpoint excluding the version (e.g. http://myhost.net:9101/)
api_url = http://127.0.0.1:9101/

[system]
debug = True
base_path = /opt/stackstorm
validate_trigger_parameters = True
validate_output_schema = True

[garbagecollector]
logging = st2reactor/conf/logging.garbagecollector.conf

action_executions_ttl = 30
trigger_instances_ttl = 30

[syslog]
host = 127.0.0.1
port = 514
facility = local7
protocol = udp

[coordination]
# NOTE: Service registry / groups functionality is only available in the following drivers:
# - zookeeper
# - redis
# - etcd3
# - etcd3gw
# Keep in mind that zake driver works in process so it won't work when testing cross process 
# / cross server functionality
#url = redis://localhost
#url = kazoo://localhost

[webui]
# webui_base_url = https://mywebhost.domain

[log]
excludes = requests,paramiko
redirect_stderr = False
mask_secrets = True

[system_user]
user = stanley
ssh_key_file = /home/vagrant/.ssh/stanley_rsa

[messaging]
url = amqp://guest:guest@127.0.0.1:5672/
# Uncomment to test SSL options
#url = amqp://guest:guest@127.0.0.1:5671/
#ssl = True
#ssl_keyfile = /data/stanley/st2tests/st2tests/fixtures/ssl_certs/client/private_key.pem
#ssl_certfile = /data/stanley/st2tests/st2tests/fixtures/ssl_certs/client/client_certificate.pem
#ssl_ca_certs = /data/stanley/st2tests/st2tests/fixtures/ssl_certs/ca/ca_certificate_bundle.pem
#ssl_cert_reqs = required
#ssl_cert_reqs = required

[ssh_runner]
remote_dir = /tmp

[scheduler]
logging = st2actions/conf/logging.scheduler.conf

[notifier]
logging = st2actions/conf/logging.notifier.conf

[exporter]
logging = st2exporter/conf/logging.exporter.conf

[workflow_engine]
logging = st2actions/conf/logging.workflowengine.conf

[content]
pack_group = stanley

[packs]
enable_common_libs = True

[metrics]
driver = echo
host = 127.0.0.1
port = 8125
